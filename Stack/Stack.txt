
Explanation:
Stacks are one of the fundamental data structures that are used to store elements in a linear fashion. Stacks use the LIFO (Last In First Out) approach. This means that the most recent item
added to the stack is the first to be removed and the first item that was added to the stack will be the last item removed. This illustrates restriction of growth of a linear data structure so that new
elements can only be added or removed at one end of the stack.

Stack Operations:
Stacks have unique operations such as pop, push, peek and isEmpty.
pop - Removes the top item from the stack.
push - Adds an item to the top of the stack.
peek - checks the item that is at the top of the stack, without removing it from the stack.
isEmpty - checks to see if the stack is empty.

Example:
A common example is a pile of books. Imagine that we have 5 books for each class we take. We have a math, history, english, government and science books. We take the books and place them in 
a stack starting with the math book. After that we place the english book on the stack. Next we place the government book, then the history book, finally the science book.

If we were to remove the book that is currently at the top of the stack, what book would we remove?
If we were to continue removing books from the top of the stack which book would be removed last?

 ___________
|SCIENCE____|
|HISTORY____|
|GOVERNMENT_|
|ENGLISH____|
|MATH_______|

Common Usages of a Stack:
We use stacks when we want to get elements in the reverse order than we put them in. One example that we use in every day lif is the back button. When we are on the internet and we want to load the
previous page we use the back button. Once the back button is pressed the page that we were on previously is loaded to the browser. If we press the back button mulitple times we continue to move to the
previous page. Another example is the undo button. Whenever we use a text editor we use the undo button to reverse actions that have been made to the document.
